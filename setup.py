"""setup script 
"""
import os.path as osp
from setuptools import setup, find_packages

_NAME = "unremarkable"

def _path(*args):
    return osp.join(osp.split(__file__)[0], *args)

def _set_version(version):
    with open(_path(_NAME,'version.py'), 'w', encoding='utf8') as _fi:
        _fi.write('"""@xvdp generated by setup.py"""\n')
        _fi.write("__version__='"+version+"'\n")
    return version

def _requirements():
    with open(_path('requirements.txt'), encoding='utf8') as _fi:
        return _fi.read().split()

setup(
    name=_NAME,
    version=_set_version("0.1.3"),
    packages=find_packages(),
    install_requires=_requirements(),
    entry_points={
        'console_scripts': [
            'pdf_to_remarkable=unremarkable.__main__:pdf_to_remarkable',    # -> upload pdf
            'pdf_bibtex=unremarkable.__main__:pdf_bibtex',                  # add .bib to .pdf
            'pdfbib=unremarkable.__main__:pdf_bibtex',                      # > better alias
            'pdf_metadata=unremarkable.__main__:pdf_metadata',              # add url, author.
            'pdfmeta=unremarkable.__main__:pdf_metadata',                   # > better alias
            'remarkable_backup=unremarkable.__main__:remarkable_backup',    # <- backup to local
            'remarkable_ls=unremarkable.__main__:remarkable_ls', # . list files on backup
            'remarkable_export_annotated=unremarkable.__main__:remarkable_export_annotated',
            'remarkable_read_rm=unremarkable.__main__:remarkable_read_rm',
            'remarkable_restart=unremarkable.__main__:remarkable_restart',
            'remarkable_help=unremarkable.__main__:remarkable_help',
            'not_in_remarkable=unremarkable.__main__:not_in_remarkable'
        ],
    },
    python_requires='>=3.6',
    tests_require=["pytest"]
)
